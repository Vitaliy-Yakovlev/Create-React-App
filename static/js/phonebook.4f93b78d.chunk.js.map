{"version":3,"sources":["components/HomeWork-2/Phonebook/Form/Form.js","components/HomeWork-2/Phonebook/Contacts/Contacts.js","components/HomeWork-2/Phonebook/Filter/Filter.js","components/HomeWork-2/Phonebook/Heading/Heading.js","components/HomeWork-2/Phonebook/Container/Container.js","components/HomeWork-2/Phonebook/Phonebook.js","components/HomeWork-2/Phonebook/Form/Form.module.css","components/HomeWork-2/Phonebook/Contacts/Contacts.module.css","components/HomeWork-2/Phonebook/Filter/Filter.module.css","components/HomeWork-2/Phonebook/Heading/Heading.module.css","components/HomeWork-2/Phonebook/Container/Container.module.css"],"names":["Form","onSubmit","useState","name","setName","number","setNumber","handleInputChange","e","currentTarget","value","reset","className","s","form","preventDefault","label","input","onChange","type","pattern","title","required","btn","Contacts","contactsPhone","onClick","list","map","id","item","Filter","onChangeFilter","Heading","text","Container","children","container","Phonebook","useLocalStorage","setContactsPhone","filterPhone","setFilterPhone","contact","shortid","generate","filter","toLowerCase","length","alert","normalizedFilter","includes","filterContact","contactId","module","exports"],"mappings":"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","file":"static/js/phonebook.4f93b78d.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport s from './Form.module.css';\r\n\r\nexport default function Form({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handledSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    onSubmit({ name, number });\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handledSubmit}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          value={name}\r\n          onChange={handleInputChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            value={number}\r\n            onChange={handleInputChange}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={s.btn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </label>\r\n    </form>\r\n  );\r\n}\r\n\r\n// class Form extends Component {\r\n//   state = {\r\n//     name: '',\r\n//     number: '',\r\n//   };\r\n\r\n//   handleInputChange = e => {\r\n//     const { name, value } = e.currentTarget;\r\n\r\n//     this.setState({ [name]: value });\r\n//   };\r\n\r\n//   handledSubmit = e => {\r\n//     e.preventDefault();\r\n\r\n//     this.props.onSubmit(this.state);\r\n\r\n//     this.reset();\r\n//   };\r\n\r\n//   reset = () => {\r\n//     this.setState({ name: '', number: '' });\r\n//   };\r\n\r\n//   render() {\r\n//     const { name, number } = this.state;\r\n\r\n//     return (\r\n//       <form className={s.form} onSubmit={this.handledSubmit}>\r\n//         <label className={s.label}>\r\n//           Name\r\n//           <input\r\n//             className={s.input}\r\n//             value={name}\r\n//             onChange={this.handleInputChange}\r\n//             type=\"text\"\r\n//             name=\"name\"\r\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//             title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n//             required\r\n//           />\r\n//           <label className={s.label}>\r\n//             Number\r\n//             <input\r\n//               className={s.input}\r\n//               value={number}\r\n//               onChange={this.handleInputChange}\r\n//               type=\"tel\"\r\n//               name=\"number\"\r\n//               pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n//               title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n//               required\r\n//             />\r\n//           </label>\r\n//           <button className={s.btn} type=\"submit\">\r\n//             Add contact\r\n//           </button>\r\n//         </label>\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Form;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\n\nconst Contacts = ({ contactsPhone, onClick }) => {\n  return (\n    <ul className={s.list}>\n      {contactsPhone.map(({ name, id, number }) => {\n        return (\n          <li className={s.item} key={id}>\n            {name}: {number}\n            <button className={s.btn} type=\"button\" onClick={() => onClick(id)}>\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nContacts.propTypes = {\n  contactsPhone: PropTypes.array.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Contacts;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contact by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChangeFilter}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Heading.module.css';\r\n\r\nconst Heading = ({ text }) => <h2 className={s.title}>{text}</h2>;\r\n\r\nHeading.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Heading;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <>\r\n    <h1 className={s.title}>React. Home Work 2.2 - Phonebook</h1>\r\n    <div className={s.container}>{children}</div>\r\n  </>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","// import React, { Component } from 'react';\nimport { useState } from 'react';\nimport shortid from 'shortid';\nimport Form from './Form';\nimport Contacts from './Contacts';\nimport Filter from './Filter';\nimport Heading from './Heading';\nimport Container from './Container';\nimport useLocalStorage from '../../Hooks/useLocalStorage';\n\nexport default function Phonebook() {\n  const [contactsPhone, setContactsPhone] = useLocalStorage('contacts', []);\n\n  const [filterPhone, setFilterPhone] = useState('');\n\n  const addContact = ({ name, number }) => {\n    const contact = {\n      name,\n      id: shortid.generate(),\n      number,\n    };\n\n    const errorName = contactsPhone.filter(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    if (errorName.length) {\n      alert(`${name} is already in contacts`);\n    } else {\n      setContactsPhone([contact, ...contactsPhone]);\n    }\n  };\n\n  const filterChange = e => {\n    setFilterPhone(e.currentTarget.value);\n  };\n\n  const filterContact = () => {\n    const normalizedFilter = filterPhone.toLowerCase();\n    return contactsPhone.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const deleteContact = contactId => {\n    setContactsPhone(contact =>\n      contact.filter(contact => contact.id !== contactId),\n    );\n  };\n\n  return (\n    <>\n      <Container>\n        <Heading text=\"Phonebook\" />\n        <Form onSubmit={addContact} />\n        <Heading text=\"Contacts\" />\n        <Filter value={filterPhone} onChangeFilter={filterChange} />\n        <Contacts contactsPhone={filterContact()} onClick={deleteContact} />\n      </Container>\n    </>\n  );\n}\n\n// class Phonebook extends Component {\n//   state = {\n//     contacts: [],\n//     filter: '',\n//   };\n\n//   componentDidMount() {\n//     // console.log('App componentDidMount');\n\n//     const contacts = localStorage.getItem('contacts');\n//     const passedContacts = JSON.parse(contacts);\n\n//     if (passedContacts) {\n//       this.setState({ contacts: passedContacts });\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     // console.log('App componentDidUpdate');\n\n//     const nextContacts = this.state.contacts;\n//     const prevContacts = prevState.contacts;\n\n//     if (nextContacts !== prevContacts) {\n//       // console.log('Обновилось поле contacts, записываю contacts в хранилище');\n//       localStorage.setItem('contacts', JSON.stringify(nextContacts));\n//     }\n//   }\n\n//   addContact = ({ name, number }) => {\n//     const contact = {\n//       name,\n//       id: shortid.generate(),\n//       number,\n//     };\n\n//     const errorName = this.state.contacts.filter(\n//       contact => contact.name.toLowerCase() === name.toLowerCase(),\n//     );\n\n//     if (errorName.length) {\n//       alert(`${name} is already in contacts`);\n//     } else {\n//       this.setState(({ contacts }) => ({\n//         contacts: [contact, ...contacts],\n//       }));\n//     }\n//   };\n\n//   resetInput = () => {\n//     this.setState({ name: '', number: '' });\n//   };\n\n//   filterChange = e => {\n//     this.setState({ filter: e.currentTarget.value });\n//   };\n\n//   filterContact = () => {\n//     const { contacts, filter } = this.state;\n\n//     const normalizedFilter = filter.toLowerCase();\n\n//     return contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(normalizedFilter),\n//     );\n//   };\n\n//   deleteContact = contactId => {\n//     this.setState(({ contacts }) => ({\n//       contacts: contacts.filter(contact => contact.id !== contactId),\n//     }));\n//   };\n\n//   render() {\n//     const { filter } = this.state;\n\n//     return (\n//       <>\n//         <Container>\n//           <Heading text=\"Phonebook\" />\n\n//           <Form onSubmit={this.addContact} />\n\n//           <Heading text=\"Contacts\" />\n\n//           <Filter value={filter} onChangeFilter={this.filterChange} />\n\n//           <Contacts\n//             contacts={this.filterContact()}\n//             onClick={this.deleteContact}\n//           />\n//         </Container>\n//       </>\n//     );\n//   }\n// }\n\n// export default Phonebook;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Form_label__dJ8ED\",\"input\":\"Form_input__LwRe_\",\"btn\":\"Form_btn__4RA-O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__Ca6Su\",\"item\":\"Contacts_item__2J9Q9\",\"btn\":\"Contacts_btn__1LIEz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2Lo3-\",\"input\":\"Filter_input__QYLsF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Heading_title__3hCMo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1utN1\",\"title\":\"Container_title__1mR-o\"};"],"sourceRoot":""}