{"version":3,"sources":["components/ColorPicker/ColorPicker.module.css","components/ColorPicker/ColorPicker.js"],"names":["module","exports","ColorPicker","options","useState","activeOptionIndx","setActiveOptionIndx","label","makeOptionsClassNames","i","optionClassName","styles","option","btn","push","active","join","className","container","title","text","style","color","fontSize","fontWeight","toUpperCase","map","backgroundColor","onClick","memo"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,UAAY,+BAA+B,MAAQ,2BAA2B,KAAO,0BAA0B,OAAS,4BAA4B,IAAM,yBAAyB,OAAS,8B,4HCE9M,SAASC,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QACrB,EAAgDC,mBAAS,GAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KAEQC,EAAUJ,EAAQE,GAAlBE,MAEFC,EAAwB,SAAAC,GAC5B,IAAMC,EAAkB,CAACC,IAAOC,OAAQD,IAAOE,KAM/C,OAJIJ,IAAMJ,GACRK,EAAgBI,KAAKH,IAAOI,QAGvBL,EAAgBM,KAAK,MAG9B,OACE,sBAAKC,UAAWN,IAAOO,UAAvB,UACE,oBAAID,UAAWN,IAAOQ,MAAtB,0BACA,oBAAGF,UAAWN,IAAOS,KAArB,2EACe,IACb,sBAAMC,MAAO,CAAEC,MAAOf,EAAOgB,SAAU,GAAIC,WAAY,KAAvD,SACGjB,EAAMkB,mBAGX,8BACGtB,EAAQuB,KAAI,WAAmBjB,GAAnB,IAAGa,EAAH,EAAGA,MAAOf,EAAV,EAAUA,MAAV,OACX,wBAEE,aAAYA,EACZU,UAAWT,EAAsBC,GACjCY,MAAO,CAAEM,gBAAiBL,GAC1BM,QAAS,kBAAMtB,EAAoBG,KAJ9BF,WAYFsB,qBAAK3B","file":"static/js/color-picker.ba3eecf3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ColorPicker_container__39Ppn\",\"title\":\"ColorPicker_title__2iFJl\",\"text\":\"ColorPicker_text__1z_a-\",\"option\":\"ColorPicker_option__jyqz9\",\"btn\":\"ColorPicker_btn__2ii4q\",\"active\":\"ColorPicker_active__8slTh\"};","import React, { useState, memo } from 'react';\r\nimport styles from './ColorPicker.module.css';\r\n\r\nfunction ColorPicker({ options }) {\r\n  const [activeOptionIndx, setActiveOptionIndx] = useState(0);\r\n\r\n  const { label } = options[activeOptionIndx];\r\n\r\n  const makeOptionsClassNames = i => {\r\n    const optionClassName = [styles.option, styles.btn];\r\n\r\n    if (i === activeOptionIndx) {\r\n      optionClassName.push(styles.active);\r\n    }\r\n\r\n    return optionClassName.join(' ');\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2 className={styles.title}>Color Picker</h2>\r\n      <p className={styles.text}>\r\n        Выбран цвет:{' '}\r\n        <span style={{ color: label, fontSize: 20, fontWeight: 900 }}>\r\n          {label.toUpperCase()}\r\n        </span>\r\n      </p>\r\n      <div>\r\n        {options.map(({ color, label }, i) => (\r\n          <button\r\n            key={label}\r\n            aria-label={label}\r\n            className={makeOptionsClassNames(i)}\r\n            style={{ backgroundColor: color }}\r\n            onClick={() => setActiveOptionIndx(i)}\r\n          ></button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(ColorPicker);\r\n\r\n// class ColorPicker extends PureComponent {\r\n//   state = {\r\n//     activeOptionIndx: 0,\r\n//   };\r\n\r\n//   // PureComponent =>\r\n//   // shouldComponentUpdate(nextProps, nextState) {\r\n//   //   return nextState.activeOptionIndx !== this.state.activeOptionIndx;\r\n//   // }\r\n\r\n//   setActiveIndx = i => {\r\n//     this.setState({\r\n//       activeOptionIndx: i,\r\n//     });\r\n//   };\r\n\r\n//   makeOptionsClassNames = i => {\r\n//     const optionClassName = [styles.option];\r\n\r\n//     if (i === this.state.activeOptionIndx) {\r\n//       optionClassName.push(styles.active);\r\n//     }\r\n\r\n//     return optionClassName.join(' ');\r\n//   };\r\n\r\n//   render() {\r\n//     console.log(`Re-render : ${Date.now()}`);\r\n\r\n//     const { activeOptionIndx } = this.state;\r\n//     const { options } = this.props;\r\n//     const { label } = options[activeOptionIndx];\r\n\r\n//     return (\r\n//       <div className={styles.container}>\r\n//         <h2 className={styles.title}>Color Picker</h2>\r\n//         <p>Выбран цвет: {label}</p>\r\n//         <div>\r\n//           {options.map(({ color }, i) => (\r\n//             <button\r\n//               key={color}\r\n//               className={this.makeOptionsClassNames(i)}\r\n//               style={{ backgroundColor: color }}\r\n//               onClick={() => this.setActiveIndx(i)}\r\n//             ></button>\r\n//           ))}\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default ColorPicker;\r\n"],"sourceRoot":""}