{"version":3,"sources":["components/Dropdown/Dropdown.module.css","components/Dropdown/Dropdown.js"],"names":["module","exports","Dropdown","useState","visible","setVisible","className","s","dropdown","type","onClick","prevState","btn","menu"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,SAAW,2BAA2B,KAAO,uBAAuB,IAAM,wB,4HCE7E,SAASC,IACtB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAMA,OACE,sBAAKC,UAAWC,IAAEC,SAAlB,UACE,wBAAQC,KAAK,SAASC,QANX,WACbL,GAAW,SAAAM,GAAS,OAAKA,MAKgBL,UAAWC,IAAEK,IAApD,SACGR,EAAU,uCAAW,qDAKvBA,GAAW,qBAAKE,UAAWC,IAAEM,KAAlB","file":"static/js/dropdown.f619a5c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"Dropdown_dropdown__cMGj9\",\"menu\":\"Dropdown_menu__3fqtK\",\"btn\":\"Dropdown_btn__3Yfd0\"};","import { useState } from 'react';\r\nimport s from './Dropdown.module.css';\r\n\r\nexport default function Dropdown() {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setVisible(prevState => !prevState);\r\n  };\r\n\r\n  return (\r\n    <div className={s.dropdown}>\r\n      <button type=\"button\" onClick={toggle} className={s.btn}>\r\n        {visible ? 'Скрыть' : 'Показать'}\r\n      </button>\r\n      {/* <button type=\"button\" onClick={this.hide} className={s.toggle}>\r\n            Скрыть\r\n          </button> */}\r\n      {visible && <div className={s.menu}>Выпадающее меню</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\n// class Dropdown extends Component {\r\n//   state = {\r\n//     visible: false,\r\n//   };\r\n\r\n//   toggle = () => {\r\n//     this.setState(prevState => ({\r\n//       visible: !prevState.visible,\r\n//     }));\r\n//   };\r\n\r\n//   //   show = () => {\r\n//   //     this.setState({\r\n//   //       visible: true,\r\n//   //     });\r\n//   //   };\r\n\r\n//   //   hide = () => {\r\n//   //     this.setState({\r\n//   //       visible: false,\r\n//   //     });\r\n//   //   };\r\n\r\n//   render() {\r\n//     const { visible } = this.state;\r\n\r\n//     return (\r\n//       <div className={s.dropdown}>\r\n//         <button type=\"button\" onClick={this.toggle} className={s.btn}>\r\n//           {visible ? 'Скрыть' : 'Паказать'}\r\n//         </button>\r\n\r\n//         {/* <button type=\"button\" onClick={this.hide} className={s.toggle}>\r\n//           Скрыть\r\n//         </button> */}\r\n\r\n//         {visible && <div className={s.menu}>Выпадаюшее меню</div>}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Dropdown;\r\n"],"sourceRoot":""}